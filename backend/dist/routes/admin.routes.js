"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const auth_middleware_1 = require("../middlewares/auth.middleware");
const role_middleware_1 = require("../middlewares/role.middleware");
const admin_controller_1 = require("../controllers/admin.controller");
const diagnostics_controller_1 = require("../controllers/diagnostics.controller");
const client_1 = require("@prisma/client");
const group_controller_1 = require("../controllers/group.controller");
const teacher_controller_1 = require("../controllers/teacher.controller");
const teacher_controller_2 = require("../controllers/teacher.controller");
const prisma = new client_1.PrismaClient();
const router = (0, express_1.Router)();
router.use(auth_middleware_1.authenticate);
router.get('/users', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), admin_controller_1.getAllUsers);
router.put('/users/:id/role', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), admin_controller_1.updateUserRole);
router.delete('/users/:id', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), admin_controller_1.deleteUser);
router.get('/components', diagnostics_controller_1.getAllComponents);
router.post('/diagnostics/update', diagnostics_controller_1.updateDiagnosticScore);
router.get('/analytics/lessons/:studentId', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), diagnostics_controller_1.getStudentLessonAnalytics);
router.get('/student-lessons/:id', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), diagnostics_controller_1.getStudentLessonsInRange);
router.get('/groups', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), group_controller_1.getAllGroups);
router.get('/groups/:id', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), group_controller_1.getGroupById);
router.put('/groups/:groupId/lessons/:lessonId', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), group_controller_1.updateLesson);
router.post('/groups/:id/change-teacher', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), group_controller_1.changeTeacher);
router.post('/groups/:id/add-student', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), group_controller_1.addStudentToGroup);
router.post('/groups/:id/remove-student', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), group_controller_1.removeStudentFromGroup);
router.get('/lesson/:lessonId/students', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), teacher_controller_1.getLessonStudents);
router.post('/lesson/:lessonId/save', auth_middleware_1.authenticate, (0, role_middleware_1.onlyRole)('admin'), teacher_controller_1.saveLessonGrades);
router.post('/groups/:groupId/add-lesson', teacher_controller_2.createLesson);
router.delete('/groups/:groupId/lessons/:lessonId', teacher_controller_2.deleteLesson);
router.post('/groups/:groupId/update-lessons', teacher_controller_2.updateLessons);
router.post('/groups/:id/rename', admin_controller_1.renameGroup);
router.put('/users/:userId/birthday', (0, role_middleware_1.onlyRole)('admin'), admin_controller_1.updateBirthday);
exports.default = router;
